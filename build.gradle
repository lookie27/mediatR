plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
    id 'signing'
    id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
    id 'jacoco'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

group = 'io.github.lucasbuccilli'
version = '1.0.2'

java {
    sourceCompatibility = '17'
    withJavadocJar()
    withSourcesJar()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    implementation 'org.springframework:spring-context:6.1.1'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.2.0'
}

tasks.named('test') {
    useJUnitPlatform()
}
publishing {
    publications {

        mavenJava(MavenPublication) {

            groupId = group
            artifactId = 'mediatR'
            version = version
            from components.java

            pom {
                name = 'mediatR'
                description = 'Simple mediator implementation in Java ' +
                        'In-process messaging with minimal dependencies. ' +
                        'MediatR is a Java recreation of MediatR by jbogard. '
                url = 'https://github.com/lucasbuccilli/mediatR'
                inceptionYear = '2023'

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'lucasbuccilli'
                        name = 'Lucas Buccilli'
                        email = 'lookie27@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git:github.com/lucasbuccilli/mediatR.git'
                    developerConnection = 'scm:git:ssh://github.com/lucasbuccilli/mediatR.git'
                    url = 'https://github.com/lucasbuccilli/mediatR'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv('SONATYPE_USERNAME')
                password = System.getenv('SONATYPE_PASSWORD')
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            username = System.getenv('SONATYPE_USERNAME')
            password = System.getenv('SONATYPE_PASSWORD')
        }
    }
}


javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

jacocoTestReport {
    dependsOn test
    reports {
        csv.required = true
    }
}